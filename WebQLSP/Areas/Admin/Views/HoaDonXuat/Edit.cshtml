@model WebQLSP.Models.InvoiceOut

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>InvoiceOut</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Inv_ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Inv_DateOut, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" name="Inv_DateOut" class="form-control opacity-50" />
                @Html.ValidationMessageFor(model => model.Inv_DateOut, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cus_ID, "Cus_ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" name="Cus_ID">

                    @foreach (var i in db.Customers.ToList())
                    {
                        <option value="@i.Cus_ID">@i.Cus_Name</option>
                    }
                </select>
            </div>
        </div>
        <div class="ml-2">
            <table class="table" id="invoicetable">
                <tbody>
                    @for (int i = 0; i < Model.DetailInvoiceOuts.Count; i++)
                    {
                        <tr class="d-flex align-items-center" id="row-@i">
                            <td>
                                @Html.EditorFor(x => x.DetailInvoiceOuts[i].Prod_ID, new { htmlAttributes = new { @class = "form-control opacity-50", @placeholder = "Sản phẩm......" } })
                            </td>
                            <td>
                                @Html.EditorFor(x => x.DetailInvoiceOuts[i].Quantity, new { htmlAttributes = new { @class = "form-control opacity-50", @placeholder = "Số lượng......" } })
                            </td>
                            <td>
                                <button style="width: 100px" class="btn btn-success btn-add form-control mw-100" id="btn-add" onclick="AddItem(this, event)">Add</button>
                            </td>
                            <td>
                                <button style="width: 100px" class="btn btn-danger btn-delete form-control mw-100" id="btn-delete" onclick="DeleteItem(this, event)">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <input type="hidden" id="hdnlastindex" name="hdnlastindex" value="0" />
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section script{
    <script type="text/javascript">function DeleteItem(btn, event) {
            event.preventDefault();
            var row = btn.closest('tr');
            if (row.parentNode.rows.length > 1) {
                row.remove();
            } else {
                alert('Không thể xóa');
            }
        }

        function AddItem(btn, event) {
            event.preventDefault();
            var lastRowIndex = parseInt(document.getElementById('hdnlastindex').value);
            var nextRowIndex = lastRowIndex + 1;

            var newRow = document.getElementById('row-' + lastRowIndex).cloneNode(true);
            newRow.id = 'row-' + nextRowIndex;
            var inputs = newRow.getElementsByTagName('input');
            for (var i = 0; i < inputs.length; i++) {
                var name = inputs[i].name.replace('[' + lastRowIndex + ']', '[' + nextRowIndex + ']');
                inputs[i].name = name;
            }
            var deleteButton = newRow.querySelector('.btn-delete');
            deleteButton.onclick = function () { DeleteItem(this, event); };


            document.getElementById('invoicetable').appendChild(newRow);


            document.getElementById('hdnlastindex').value = nextRowIndex;
        }</script>
}
